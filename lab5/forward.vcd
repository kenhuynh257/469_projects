$date
	Sun Jun 05 19:28:29 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 5 ! rt_DX [4:0] $end
$var wire 5 " rs_DX [4:0] $end
$var wire 1 # regWrite_XM $end
$var wire 1 $ regWrite_MW $end
$var wire 5 % rd_XM [4:0] $end
$var wire 5 & rd_MW [4:0] $end
$var wire 2 ' forwardB [1:0] $end
$var wire 2 ( forwardA [1:0] $end
$scope module dut $end
$var wire 5 ) rt_DX [4:0] $end
$var wire 5 * rs_DX [4:0] $end
$var wire 1 # regWrite_XM $end
$var wire 1 $ regWrite_MW $end
$var wire 5 + rd_XM [4:0] $end
$var wire 5 , rd_MW [4:0] $end
$var reg 2 - forwardA [1:0] $end
$var reg 2 . forwardB [1:0] $end
$upscope $end
$scope module test $end
$var wire 2 / forwardA [1:0] $end
$var wire 2 0 forwardB [1:0] $end
$var reg 5 1 rd_MW [4:0] $end
$var reg 5 2 rd_XM [4:0] $end
$var reg 1 $ regWrite_MW $end
$var reg 1 # regWrite_XM $end
$var reg 5 3 rs_DX [4:0] $end
$var reg 5 4 rt_DX [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 4
b11111 3
b11111 2
b11111 1
b0 0
b10 /
b0 .
b10 -
b11111 ,
b11111 +
b11111 *
b11 )
b10 (
b0 '
b11111 &
b11111 %
1$
1#
b11111 "
b11 !
$end
#10
b10 '
b10 .
b10 0
b0 (
b0 -
b0 /
b11111 !
b11111 )
b11111 4
b0 "
b0 *
b0 3
#20
b0 '
b0 .
b0 0
b11 !
b11 )
b11 4
b11111 "
b11111 *
b11111 3
b0 %
b0 +
b0 2
b0 &
b0 ,
b0 1
#30
b10001 %
b10001 +
b10001 2
b11 &
b11 ,
b11 1
#40
b1 '
b1 .
b1 0
0#
#50
b1 (
b1 -
b1 /
b11 "
b11 *
b11 3
#60
b0 '
b0 .
b0 0
b0 (
b0 -
b0 /
b11111 "
b11111 *
b11111 3
b0 %
b0 +
b0 2
b11111 &
b11111 ,
b11111 1
0$
#70
