$date
	Sun Jun 05 18:49:59 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 5 ! writeSel_XM [4:0] $end
$var wire 5 " writeSel_MW [4:0] $end
$var wire 1 # regWrite_XM $end
$var wire 1 $ regWrite_MW $end
$var wire 5 % readSel2_DX [4:0] $end
$var wire 5 & readSel1_DX [4:0] $end
$var wire 2 ' forwardB [1:0] $end
$var wire 2 ( forwardA [1:0] $end
$scope module dut $end
$var wire 5 ) writeSel_XM [4:0] $end
$var wire 5 * writeSel_MW [4:0] $end
$var wire 1 # regWrite_XM $end
$var wire 1 $ regWrite_MW $end
$var wire 5 + readSel2_DX [4:0] $end
$var wire 5 , readSel1_DX [4:0] $end
$var reg 2 - forwardA [1:0] $end
$var reg 2 . forwardB [1:0] $end
$upscope $end
$scope module test $end
$var wire 2 / forwardA [1:0] $end
$var wire 2 0 forwardB [1:0] $end
$var reg 5 1 readSel1_DX [4:0] $end
$var reg 5 2 readSel2_DX [4:0] $end
$var reg 1 $ regWrite_MW $end
$var reg 1 # regWrite_XM $end
$var reg 5 3 writeSel_MW [4:0] $end
$var reg 5 4 writeSel_XM [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111 4
b11111 3
b11 2
b11111 1
b0 0
b10 /
b0 .
b10 -
b11111 ,
b11 +
b11111 *
b11111 )
b10 (
b0 '
b11111 &
b11 %
1$
1#
b11111 "
b11111 !
$end
#10
b10 '
b10 .
b10 0
b0 (
b0 -
b0 /
b11111 %
b11111 +
b11111 2
b0 &
b0 ,
b0 1
#20
b0 '
b0 .
b0 0
b11 %
b11 +
b11 2
b11111 &
b11111 ,
b11111 1
b0 !
b0 )
b0 4
#40
b10 (
b10 -
b10 /
b10101 &
b10101 ,
b10101 1
b10101 !
b10101 )
b10101 4
#60
b0 (
b0 -
b0 /
b11111 &
b11111 ,
b11111 1
b0 !
b0 )
b0 4
0#
#70
0$
#80
